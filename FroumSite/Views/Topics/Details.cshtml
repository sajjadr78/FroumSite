@using FroumSite.Utilities;
@using FroumSite.Models.ViewModels;
@using System.Security.Claims;
@model ShowTopicAndSavePostViewModel

@{
    ViewData["Title"] = "Details";
}

<a class="btn btn-success m-3" asp-action="Index" asp-controller="Topics"
   asp-route-id="@Model.TopicIncludedUploader.RoomId">
    بازگشت
</a>

<div class=" row col-12 mb-3 border " style="border-radius:20px">
    <div class="col-3 p-3" style="background-color:#fff3e0;">
        @{
            var uploader = Model.TopicIncludedUploader.User;
            var uploaderFullName = uploader.Name + " " + uploader.Family;

            var uploaderId = uploader.Id;
        }
        <a onclick="showPopupModal('@Url.Action("Details","Users",new {id = uploaderId},protocol:Context.Request.Scheme)','مشخصات کاربر')"
           class="link text-primary">

            @uploaderFullName

        </a>
        <div>
            @($"تاریخ عضویت : {Model.TopicIncludedUploader.User.RegisterDate.ToShamsi()}")
        </div>

        <div>
            @($"تعداد پست های کاربر : {Model.PostsCountUploadedByUser} ")
        </div>
    </div>
    <div class="col-9 p-3">
        <div>
            <h4>عنوان : @Model.TopicIncludedUploader.Title</h4>
        </div>
        <div>
            <span class="text-muted card-subtitle">
                @Model.PostsOfCurrentTopic.Count پست
            </span>
        </div>

        <hr />

        <div>
            @Model.TopicIncludedUploader.Description
        </div>
        <hr />
        <div id="LikeButton" >
            @{
                LikeViewModel likeViewModel = new LikeViewModel
                {
                    IsLiked = Model.IsTopicLikedByUser,
                    LikeCount = Model.TopicIncludedUploader.LikeCount
                };
            }
            @await Html.PartialAsync("_TopicLikeButton",likeViewModel)

        </div>


        <div class="text-muted text-sm-right">
            @Model.TopicIncludedUploader.UploadDate.ToShamsi()
        </div>

        @if (User.Identity.IsAuthenticated)
        {

            int userId = int.Parse(User
            .Claims
            .FirstOrDefault(x =>
            x.Type == System.Security.Claims.ClaimTypes.NameIdentifier)?
            .Value);
            var topicId = Model.TopicIncludedUploader.Id;
            //bool isTopicCreatedByUser = userId == item.UserId;

            if (userId == Model.TopicIncludedUploader.UserId)
            {
                <button class="btn btn-success"
                        onclick="showCenteredModal('@Url.Action("EditTopicByUser","Topics",new {id = topicId},protocol:Context.Request.Scheme)','ویرایش تاپیک')">
                    ویرایش
                </button>
            }
        }
    </div>

</div>



<div id="view-all-posts">
    @await Html.PartialAsync("_ViewAllPosts",Model)
</div>


<div class="col-12 border row p-1 mb-3" style="border-radius:20px">
    <form class="col-12" asp-action="SavePost" method="post" onsubmit="return ajaxSavePost(this)">


        <div class=" col-12">
            <textarea id="txtPost" placeholder="نظر شما" class="col-12 border-white" asp-for="Caption" cols="12" rows="3">
                
            </textarea>
            <span class="text-danger" asp-validation-for="Caption"></span>
        </div>

        <div class="col-4 border-white">

            <input type="submit" value="ثبت" class="btn btn-success" />
        </div>

    </form>
</div>




@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    @* <script src="~/js/site.js"></script> *@
    <script src="~/js/Custom.js">
        // function ShowLikesPost(id) {
        //     $.ajax({
        //         type: "GET",
        //         url: "/Topics/ShowPostLikes/" + id,
        //         data: {},
        //         success: function (response) {
        //             $('#likesModal').modal('show');
        //             $('#likesContainer').html(response);
        //         }
        //     });
        // }

        // function EditPost(id) {
        //     $.ajax({
        //         type: "GET",
        //         url: "/Topics/EditPostByUser/" + id,
        //         data: {},
        //         success: function (response) {
        //             $('#likesModal').modal('show');
        //             $('#likesContainer').html(response);
        //         }
        //     });
        // }

        // function DeletePost(id) {
        //     $.ajax({
        //         type: "GET",
        //         url: "/Topics/DeletePostByUser/" + id,
        //         data: {},
        //         success: function (response) {
        //             $('#likesModal').modal('show');
        //             $('#likesContainer').html(response);
        //         }
        //     });
        // }

        // function ShowTopicLikes() {
        //     $.ajax({
        //         url: '/Topics/ShowTopicLikes',  // Replace with your actual endpoint
        //         type: 'GET',
        //         success: function (data) {
        //             // Update the likesContainer with the fetched data
        //             $('#likesContainer').html(data);
        //         },
        //         error: function () {
        //             // Handle error
        //             console.error('Failed to fetch likes data.');
        //         }
        //     });
        // }


    </script>
}

